from flask import Flask, render_template, request, session
from datetime import datetime
import redis
import json

app = Flask(__name__)
app.secret_key = 'your_secret_key'  # Change this to a secure random key
redis_client = redis.StrictRedis(host='localhost', port=6379, db=0)

# Function to get entries from Redis cache or database
def get_entries():
    cached_entries = redis_client.get('entries')
    if cached_entries:
        return json.loads(cached_entries)
    else:
        return []

@app.route('/')
def index():
    entries = get_entries()
    return render_template('index.html', entries=entries)

@app.route('/submit', methods=['POST'])
def submit():
    # Extract form data
    username = request.form['username']
    language = request.form['language']
    source_code = request.form['source_code']
    timestamp = datetime.now()

    # Limit the display of source code to the initial 100 characters
    source_code_shortened = source_code[:100]

    # Add entry to the list
    new_entry = {'username': username, 'language': language, 'source_code_shortened': source_code_shortened, 'timestamp': timestamp}

    # Get existing entries from Redis cache or database
    entries = get_entries()

    # Add the new entry to the list
    entries.append(new_entry)

    # Store updated entries in Redis cache
    redis_client.set('entries', json.dumps(entries))

    return render_template('index.html', entries=entries)

if __name__ == '__main__':
    app.run(debug=True)
